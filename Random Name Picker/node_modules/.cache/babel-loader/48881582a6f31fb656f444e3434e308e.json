{"ast":null,"code":"var _jsxFileName = \"/media/wmt-rn/WMT/React-Native/Workspace/Hacktoberfest2021/Random Name Picker/src/pages/SpinWheel/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, SecondaryInternalLink, H3, P } from '../../styles';\nimport { Container, Wrapper, Title, ProgressContainer, SuccessMessage } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst chance = require('chance').Chance();\n\nconst SpinWheel = () => {\n  _s();\n\n  const [luckyIndex, setLuckyIndex] = useState(0);\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const formatStringToArr = string => string.replace(/[\\r\\n]+/gm, ', ').split(', ');\n\n      const shuffledArray = chance.shuffle(formatStringToArr(localStorage.list));\n      setList(shuffledArray);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleClick = () => {\n    setLuckyIndex(luckyIndex => luckyIndex < list.length - 1 ? luckyIndex + 1 : null);\n    console.log(luckyIndex);\n  };\n\n  const calculateWidth = () => (luckyIndex + 1) / list.length;\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(H3, {\n        children: \"Who's the lucky duck?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: list[luckyIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n        max: \"100\",\n        value: calculateWidth() * 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), luckyIndex === list.length - 1 ? /*#__PURE__*/_jsxDEV(SuccessMessage, {\n        children: [/*#__PURE__*/_jsxDEV(P, {\n          children: \"Hurrah! You've reached the last item.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SecondaryInternalLink, {\n          to: \"/list\",\n          children: \"Back to list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClick,\n        primary: true,\n        children: \"Next spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SpinWheel, \"KXRqpUcBQs71mdtfPQO8Ed9C02k=\");\n\n_c = SpinWheel;\nexport default _c2 = withRouter(SpinWheel);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SpinWheel\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/media/wmt-rn/WMT/React-Native/Workspace/Hacktoberfest2021/Random Name Picker/src/pages/SpinWheel/index.jsx"],"names":["React","useState","useEffect","withRouter","Button","SecondaryInternalLink","H3","P","Container","Wrapper","Title","ProgressContainer","SuccessMessage","chance","require","Chance","SpinWheel","luckyIndex","setLuckyIndex","list","setList","fetchData","formatStringToArr","string","replace","split","shuffledArray","shuffle","localStorage","handleClick","length","console","log","calculateWidth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,MAAR,EAAgBC,qBAAhB,EAAuCC,EAAvC,EAA2CC,CAA3C,QAAmD,cAAnD;AACA,SAAQC,SAAR,EAAmBC,OAAnB,EAA4BC,KAA5B,EAAmCC,iBAAnC,EAAsDC,cAAtD,QAA2E,UAA3E;;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,EAAf;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,SAAS,GAAG,YAAY;AAC5B,YAAMC,iBAAiB,GAAIC,MAAD,IAAYA,MAAM,CAACC,OAAP,CAAe,WAAf,EAA4B,IAA5B,EAAkCC,KAAlC,CAAwC,IAAxC,CAAtC;;AACA,YAAMC,aAAa,GAAGb,MAAM,CAACc,OAAP,CAAeL,iBAAiB,CAACM,YAAY,CAACT,IAAd,CAAhC,CAAtB;AACAC,MAAAA,OAAO,CAACM,aAAD,CAAP;AACD,KAJD;;AAMAL,IAAAA,SAAS;AACV,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMQ,WAAW,GAAG,MAAM;AACxBX,IAAAA,aAAa,CAAED,UAAD,IAAiBA,UAAU,GAAGE,IAAI,CAACW,MAAL,GAAc,CAA3B,GAA+Bb,UAAU,GAAG,CAA5C,GAAgD,IAAlE,CAAb;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ;AACD,GAHD;;AAKA,QAAMgB,cAAc,GAAG,MAAM,CAAChB,UAAU,GAAG,CAAd,IAAmBE,IAAI,CAACW,MAArD;;AAEA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,SAAD;AAAA,8BACE,QAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAA,kBAAQX,IAAI,CAACF,UAAD;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,iBAAD;AAAA,8BACE;AAAU,QAAA,GAAG,EAAC,KAAd;AAAoB,QAAA,KAAK,EAAEgB,cAAc,KAAK;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,EAEGhB,UAAU,KAAKE,IAAI,CAACW,MAAL,GAAc,CAA7B,gBACC,QAAC,cAAD;AAAA,gCACE,QAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,qBAAD;AAAuB,UAAA,EAAE,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAMC,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAED,WAAjB;AAA8B,QAAA,OAAO,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA3CD;;GAAMb,S;;KAAAA,S;AA6CN,qBAAeb,UAAU,CAACa,SAAD,CAAzB","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {withRouter} from 'react-router-dom'\nimport {Button, SecondaryInternalLink, H3, P} from '../../styles'\nimport {Container, Wrapper, Title, ProgressContainer, SuccessMessage} from './styles'\nconst chance = require('chance').Chance()\n\nconst SpinWheel = () => {\n  const [luckyIndex, setLuckyIndex] = useState(0)\n  const [list, setList] = useState([])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const formatStringToArr = (string) => string.replace(/[\\r\\n]+/gm, ', ').split(', ')\n      const shuffledArray = chance.shuffle(formatStringToArr(localStorage.list))\n      setList(shuffledArray)\n    }\n\n    fetchData()\n  }, [])\n\n  const handleClick = () => {\n    setLuckyIndex((luckyIndex) => (luckyIndex < list.length - 1 ? luckyIndex + 1 : null))\n    console.log(luckyIndex)\n  }\n\n  const calculateWidth = () => (luckyIndex + 1) / list.length\n\n  return (\n    <Wrapper>\n      <Container>\n        <H3>Who's the lucky duck?</H3>\n        <Title>{list[luckyIndex]}</Title>\n      </Container>\n\n      <ProgressContainer>\n        <progress max=\"100\" value={calculateWidth() * 100} />\n        {luckyIndex === list.length - 1 ? (\n          <SuccessMessage>\n            <P>Hurrah! You've reached the last item.</P>\n            <SecondaryInternalLink to=\"/list\">Back to list</SecondaryInternalLink>\n          </SuccessMessage>\n        ) : (\n          <Button onClick={handleClick} primary>\n            Next spin\n          </Button>\n        )}\n      </ProgressContainer>\n    </Wrapper>\n  )\n}\n\nexport default withRouter(SpinWheel)\n"]},"metadata":{},"sourceType":"module"}