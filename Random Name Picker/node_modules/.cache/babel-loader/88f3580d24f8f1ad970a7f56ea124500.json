{"ast":null,"code":"var _jsxFileName = \"/media/wmt-rn/WMT/React-Native/Workspace/Hacktoberfest2021/Random Name Picker/src/pages/CreateList/index.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { StyledForm, StyledField, TextArea, Label, InputContainer, Button, H3, P } from '../../styles';\nimport { DangerZone, Error } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateList = props => {\n  const handleSubmit = values => {\n    localStorage.setItem('title', values.title);\n    localStorage.setItem('list', values.list);\n    props.history.push('/list');\n  };\n\n  const formSchema = Yup.object().shape({\n    title: Yup.string().required('* Please enter a list name.'),\n    list: Yup.string().required('* Please enter at least one list item.')\n  });\n\n  const deleteList = () => {\n    localStorage.clear();\n    props.history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      title: `${localStorage.title ? localStorage.title : ''}`,\n      list: `${localStorage.list ? localStorage.list : ''}`\n    },\n    validationSchema: formSchema,\n    onSubmit: handleSubmit,\n    children: ({\n      errors,\n      touched\n    }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: window.location.href.includes('create') ? 'Create your list' : 'Edit list'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledForm, {\n        children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            children: [\"List title\", /*#__PURE__*/_jsxDEV(P, {\n              children: \"Write the purpose of this list. Is it for a stand up meeting? Or deciding who gets to buy the next round of drinks?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), touched.title && errors.title && /*#__PURE__*/_jsxDEV(Error, {\n              children: errors.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(StyledField, {\n              name: \"title\",\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n          children: /*#__PURE__*/_jsxDEV(Label, {\n            children: [\"Enter a list\", /*#__PURE__*/_jsxDEV(P, {\n              children: \"Write all your list items separated by a comma or a line break. For example, \\\"apple, orange, banana.\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), touched.list && errors.list && /*#__PURE__*/_jsxDEV(Error, {\n              children: errors.list\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 47\n            }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n              name: \"list\",\n              autoComplete: \"off\",\n              component: \"textarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: errors.title || errors.list,\n          children: \"Save list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), window.location.href.includes('edit') && /*#__PURE__*/_jsxDEV(DangerZone, {\n          children: [/*#__PURE__*/_jsxDEV(H3, {\n            children: \"Danger zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(P, {\n            children: \"Deleting a list is permanent, so make sure you're making the right decision!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: deleteList,\n            children: \"Delete list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CreateList;\nexport default _c2 = withRouter(CreateList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/media/wmt-rn/WMT/React-Native/Workspace/Hacktoberfest2021/Random Name Picker/src/pages/CreateList/index.jsx"],"names":["React","withRouter","Yup","Formik","StyledForm","StyledField","TextArea","Label","InputContainer","Button","H3","P","DangerZone","Error","CreateList","props","handleSubmit","values","localStorage","setItem","title","list","history","push","formSchema","object","shape","string","required","deleteList","clear","errors","touched","window","location","href","includes"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {withRouter} from 'react-router-dom'\nimport * as Yup from 'yup'\nimport {Formik} from 'formik'\nimport {StyledForm, StyledField, TextArea, Label, InputContainer, Button, H3, P} from '../../styles'\nimport {DangerZone, Error} from './styles'\n\nconst CreateList = (props) => {\n  const handleSubmit = (values) => {\n    localStorage.setItem('title', values.title)\n    localStorage.setItem('list', values.list)\n    props.history.push('/list')\n  }\n\n  const formSchema = Yup.object().shape({\n    title: Yup.string().required('* Please enter a list name.'),\n    list: Yup.string().required('* Please enter at least one list item.'),\n  })\n\n  const deleteList = () => {\n    localStorage.clear()\n    props.history.push('/')\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        title: `${localStorage.title ? localStorage.title : ''}`,\n        list: `${localStorage.list ? localStorage.list : ''}`,\n      }}\n      validationSchema={formSchema}\n      onSubmit={handleSubmit}\n    >\n      {({errors, touched}) => (\n        <>\n          <h1>{window.location.href.includes('create') ? 'Create your list' : 'Edit list'}</h1>\n          <StyledForm>\n            <InputContainer>\n              <Label>List title\n              <P>\n                Write the purpose of this list. Is it for a stand up meeting? Or deciding who gets to buy the next round of drinks?\n              </P>\n              {touched.title && errors.title && <Error>{errors.title}</Error>}\n              <StyledField name=\"title\" autoComplete=\"off\" />\n              </Label>\n            </InputContainer>\n\n            <InputContainer>\n              <Label>Enter a list\n              <P>\n                Write all your list items separated by a comma or a line break. For example,\n                \"apple, orange, banana.\"\n              </P>\n              {touched.list && errors.list && <Error>{errors.list}</Error>}\n              <TextArea name=\"list\" autoComplete=\"off\" component=\"textarea\" />\n              </Label>\n            </InputContainer>\n            \n            <Button type=\"submit\" disabled={errors.title || errors.list}>Save list</Button>\n\n            {window.location.href.includes('edit') && \n              <DangerZone>\n                <H3>Danger zone</H3>\n                <P>Deleting a list is permanent, so make sure you're making the right decision!</P>\n                <Button onClick={deleteList}>Delete list</Button>\n              </DangerZone>\n            }\n          </StyledForm>\n        </>\n      )}\n    </Formik>\n  )\n}\n\nexport default withRouter(CreateList)\n"]},"metadata":{},"sourceType":"module"}